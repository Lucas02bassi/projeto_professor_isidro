
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASPAS ASSIGN BREAK COMMA DECLARE_FLOAT DECLARE_INT DECLARE_TEXTO DIVIDE DO DOT ELSE EQ ESCREVA FALSE FIMPROG GE GT ID IF LBRACE LE LEIA LPAREN LT MINUS NE NOT NUM OR PLUS PROGRAMA RBRACE RPAREN TEXT TIMES TRUE WHILEprogram : PROGRAMA declara bloco FIMPROGdeclara : DECLARE_INT lista_ids DOT\n               | DECLARE_FLOAT lista_ids DOT\n               | DECLARE_TEXTO lista_ids DOTlista_ids : ID\n                 | lista_ids COMMA IDbloco : comando\n             | bloco comandocomando : cmd_leitura\n               | cmd_escrita\n               | cmd_if\n               | cmd_expr\n               | cmd_while\n               | cmd_break\n               | cmd_do_while\n               | declaracmd_leitura : LEIA LPAREN ID RPAREN DOTcmd_escrita : ESCREVA LPAREN TEXT RPAREN DOT\n                   | ESCREVA LPAREN ID RPAREN DOTcmd_expr : ID ASSIGN expr DOT\n                | ID ASSIGN ASPAS ID ASPAS DOTcmd_if : IF LPAREN expr op_rel expr RPAREN LBRACE bloco RBRACE\n              | IF LPAREN expr op_rel expr RPAREN LBRACE bloco RBRACE ELSE LBRACE bloco RBRACEcmd_while : WHILE LPAREN expr op_rel expr RPAREN LBRACE bloco RBRACE\n                | WHILE LPAREN NUM RPAREN LBRACE bloco RBRACE\n                | WHILE LPAREN TRUE RPAREN LBRACE bloco RBRACE\n                | WHILE LPAREN FALSE RPAREN LBRACE bloco RBRACEcmd_do_while : DO LBRACE bloco RBRACE WHILE LPAREN expr op_rel expr RPAREN DOT\n                    | DO LBRACE bloco RBRACE WHILE LPAREN NUM RPAREN DOT\n                    | DO LBRACE bloco RBRACE WHILE LPAREN TRUE RPAREN DOT\n                    | DO LBRACE bloco RBRACE WHILE LPAREN FALSE RPAREN DOTcmd_break : BREAK DOTop_rel : LT\n              | GT\n              | LE\n              | GE\n              | NE\n              | EQ\n              | AND\n              | OR\n              | NOTexpr : expr PLUS termo\n            | expr MINUS termo\n            | termotermo : termo TIMES fator\n             | termo DIVIDE fator\n             | fatorfator : NUM\n             | ID\n             | LPAREN expr RPAREN\n             | TRUE\n             | FALSE'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,28,],[0,-1,]),'DECLARE_INT':([2,3,7,8,9,10,11,12,13,14,15,16,29,35,36,37,39,40,58,61,85,92,93,96,97,98,100,103,104,105,107,108,109,110,111,116,117,122,123,125,126,127,130,131,132,133,],[4,4,-16,4,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,4,-2,-3,-4,4,-20,-17,-18,-19,4,4,4,-21,4,4,4,4,4,-25,-26,-27,4,4,-22,-24,-29,-30,-31,4,-28,4,-23,]),'DECLARE_FLOAT':([2,3,7,8,9,10,11,12,13,14,15,16,29,35,36,37,39,40,58,61,85,92,93,96,97,98,100,103,104,105,107,108,109,110,111,116,117,122,123,125,126,127,130,131,132,133,],[5,5,-16,5,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,5,-2,-3,-4,5,-20,-17,-18,-19,5,5,5,-21,5,5,5,5,5,-25,-26,-27,5,5,-22,-24,-29,-30,-31,5,-28,5,-23,]),'DECLARE_TEXTO':([2,3,7,8,9,10,11,12,13,14,15,16,29,35,36,37,39,40,58,61,85,92,93,96,97,98,100,103,104,105,107,108,109,110,111,116,117,122,123,125,126,127,130,131,132,133,],[6,6,-16,6,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,6,-2,-3,-4,6,-20,-17,-18,-19,6,6,6,-21,6,6,6,6,6,-25,-26,-27,6,6,-22,-24,-29,-30,-31,6,-28,6,-23,]),'LEIA':([3,7,8,9,10,11,12,13,14,15,16,29,35,36,37,39,40,58,61,85,92,93,96,97,98,100,103,104,105,107,108,109,110,111,116,117,122,123,125,126,127,130,131,132,133,],[17,-16,17,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,17,-2,-3,-4,17,-20,-17,-18,-19,17,17,17,-21,17,17,17,17,17,-25,-26,-27,17,17,-22,-24,-29,-30,-31,17,-28,17,-23,]),'ESCREVA':([3,7,8,9,10,11,12,13,14,15,16,29,35,36,37,39,40,58,61,85,92,93,96,97,98,100,103,104,105,107,108,109,110,111,116,117,122,123,125,126,127,130,131,132,133,],[19,-16,19,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,19,-2,-3,-4,19,-20,-17,-18,-19,19,19,19,-21,19,19,19,19,19,-25,-26,-27,19,19,-22,-24,-29,-30,-31,19,-28,19,-23,]),'IF':([3,7,8,9,10,11,12,13,14,15,16,29,35,36,37,39,40,58,61,85,92,93,96,97,98,100,103,104,105,107,108,109,110,111,116,117,122,123,125,126,127,130,131,132,133,],[20,-16,20,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,20,-2,-3,-4,20,-20,-17,-18,-19,20,20,20,-21,20,20,20,20,20,-25,-26,-27,20,20,-22,-24,-29,-30,-31,20,-28,20,-23,]),'ID':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,29,30,31,32,33,34,35,36,37,38,39,40,44,48,58,61,62,63,65,66,70,71,72,73,74,75,76,77,78,79,80,85,92,93,96,97,98,100,103,104,105,106,107,108,109,110,111,116,117,118,122,123,125,126,127,130,131,132,133,],[18,25,25,25,-16,18,-7,-9,-10,-11,-12,-13,-14,-15,-8,41,42,52,42,42,-32,18,-2,59,-3,-4,64,42,18,-20,42,42,42,42,42,-33,-34,-35,-36,-37,-38,-39,-40,-41,42,-17,-18,-19,18,18,18,-21,18,18,18,42,18,18,-25,-26,-27,18,18,42,-22,-24,-29,-30,-31,18,-28,18,-23,]),'WHILE':([3,7,8,9,10,11,12,13,14,15,16,29,35,36,37,39,40,58,61,84,85,92,93,96,97,98,100,103,104,105,107,108,109,110,111,116,117,122,123,125,126,127,130,131,132,133,],[21,-16,21,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,21,-2,-3,-4,21,-20,99,-17,-18,-19,21,21,21,-21,21,21,21,21,21,-25,-26,-27,21,21,-22,-24,-29,-30,-31,21,-28,21,-23,]),'BREAK':([3,7,8,9,10,11,12,13,14,15,16,29,35,36,37,39,40,58,61,85,92,93,96,97,98,100,103,104,105,107,108,109,110,111,116,117,122,123,125,126,127,130,131,132,133,],[22,-16,22,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,22,-2,-3,-4,22,-20,-17,-18,-19,22,22,22,-21,22,22,22,22,22,-25,-26,-27,22,22,-22,-24,-29,-30,-31,22,-28,22,-23,]),'DO':([3,7,8,9,10,11,12,13,14,15,16,29,35,36,37,39,40,58,61,85,92,93,96,97,98,100,103,104,105,107,108,109,110,111,116,117,122,123,125,126,127,130,131,132,133,],[23,-16,23,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,23,-2,-3,-4,23,-20,-17,-18,-19,23,23,23,-21,23,23,23,23,23,-25,-26,-27,23,23,-22,-24,-29,-30,-31,23,-28,23,-23,]),'FIMPROG':([7,8,9,10,11,12,13,14,15,16,29,35,37,39,40,61,85,92,93,100,109,110,111,122,123,125,126,127,131,133,],[-16,28,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,-2,-3,-4,-20,-17,-18,-19,-21,-25,-26,-27,-22,-24,-29,-30,-31,-28,-23,]),'RBRACE':([7,9,10,11,12,13,14,15,16,29,35,37,39,40,58,61,85,92,93,100,103,104,105,109,110,111,116,117,122,123,125,126,127,131,132,133,],[-16,-7,-9,-10,-11,-12,-13,-14,-15,-8,-32,-2,-3,-4,84,-20,-17,-18,-19,-21,109,110,111,-25,-26,-27,122,123,-22,-24,-29,-30,-31,-28,133,-23,]),'LPAREN':([17,19,20,21,31,33,34,48,62,63,65,66,70,71,72,73,74,75,76,77,78,79,80,99,106,118,],[30,32,33,34,48,48,48,48,48,48,48,48,48,-33,-34,-35,-36,-37,-38,-39,-40,-41,48,106,48,48,]),'ASSIGN':([18,],[31,]),'DOT':([22,24,25,26,27,42,43,45,46,47,49,50,59,60,68,69,86,87,88,89,90,91,119,120,121,129,],[35,37,-5,39,40,-49,61,-44,-47,-48,-51,-52,-6,85,92,93,-42,-43,100,-45,-46,-50,125,126,127,131,]),'LBRACE':([23,81,82,83,101,102,128,],[36,96,97,98,107,108,130,]),'COMMA':([24,25,26,27,59,],[38,-5,38,38,-6,]),'ASPAS':([31,64,],[44,88,]),'NUM':([31,33,34,48,62,63,65,66,70,71,72,73,74,75,76,77,78,79,80,106,118,],[47,47,55,47,47,47,47,47,47,-33,-34,-35,-36,-37,-38,-39,-40,-41,47,113,47,]),'TRUE':([31,33,34,48,62,63,65,66,70,71,72,73,74,75,76,77,78,79,80,106,118,],[49,49,56,49,49,49,49,49,49,-33,-34,-35,-36,-37,-38,-39,-40,-41,49,114,49,]),'FALSE':([31,33,34,48,62,63,65,66,70,71,72,73,74,75,76,77,78,79,80,106,118,],[50,50,57,50,50,50,50,50,50,-33,-34,-35,-36,-37,-38,-39,-40,-41,50,115,50,]),'TEXT':([32,],[51,]),'RPAREN':([41,42,45,46,47,49,50,51,52,55,56,57,67,86,87,89,90,91,94,95,113,114,115,124,],[60,-49,-44,-47,-48,-51,-52,68,69,81,82,83,91,-42,-43,-45,-46,-50,101,102,119,120,121,129,]),'TIMES':([42,45,46,47,49,50,55,56,57,86,87,89,90,91,113,114,115,],[-49,65,-47,-48,-51,-52,-48,-51,-52,65,65,-45,-46,-50,-48,-51,-52,]),'DIVIDE':([42,45,46,47,49,50,55,56,57,86,87,89,90,91,113,114,115,],[-49,66,-47,-48,-51,-52,-48,-51,-52,66,66,-45,-46,-50,-48,-51,-52,]),'PLUS':([42,43,45,46,47,49,50,53,54,55,56,57,67,86,87,89,90,91,94,95,112,113,114,115,124,],[-49,62,-44,-47,-48,-51,-52,62,62,-48,-51,-52,62,-42,-43,-45,-46,-50,62,62,62,-48,-51,-52,62,]),'MINUS':([42,43,45,46,47,49,50,53,54,55,56,57,67,86,87,89,90,91,94,95,112,113,114,115,124,],[-49,63,-44,-47,-48,-51,-52,63,63,-48,-51,-52,63,-42,-43,-45,-46,-50,63,63,63,-48,-51,-52,63,]),'LT':([42,45,46,47,49,50,53,54,55,56,57,86,87,89,90,91,112,113,114,115,],[-49,-44,-47,-48,-51,-52,71,71,-48,-51,-52,-42,-43,-45,-46,-50,71,-48,-51,-52,]),'GT':([42,45,46,47,49,50,53,54,55,56,57,86,87,89,90,91,112,113,114,115,],[-49,-44,-47,-48,-51,-52,72,72,-48,-51,-52,-42,-43,-45,-46,-50,72,-48,-51,-52,]),'LE':([42,45,46,47,49,50,53,54,55,56,57,86,87,89,90,91,112,113,114,115,],[-49,-44,-47,-48,-51,-52,73,73,-48,-51,-52,-42,-43,-45,-46,-50,73,-48,-51,-52,]),'GE':([42,45,46,47,49,50,53,54,55,56,57,86,87,89,90,91,112,113,114,115,],[-49,-44,-47,-48,-51,-52,74,74,-48,-51,-52,-42,-43,-45,-46,-50,74,-48,-51,-52,]),'NE':([42,45,46,47,49,50,53,54,55,56,57,86,87,89,90,91,112,113,114,115,],[-49,-44,-47,-48,-51,-52,75,75,-48,-51,-52,-42,-43,-45,-46,-50,75,-48,-51,-52,]),'EQ':([42,45,46,47,49,50,53,54,55,56,57,86,87,89,90,91,112,113,114,115,],[-49,-44,-47,-48,-51,-52,76,76,-48,-51,-52,-42,-43,-45,-46,-50,76,-48,-51,-52,]),'AND':([42,45,46,47,49,50,53,54,55,56,57,86,87,89,90,91,112,113,114,115,],[-49,-44,-47,-48,-51,-52,77,77,-48,-51,-52,-42,-43,-45,-46,-50,77,-48,-51,-52,]),'OR':([42,45,46,47,49,50,53,54,55,56,57,86,87,89,90,91,112,113,114,115,],[-49,-44,-47,-48,-51,-52,78,78,-48,-51,-52,-42,-43,-45,-46,-50,78,-48,-51,-52,]),'NOT':([42,45,46,47,49,50,53,54,55,56,57,86,87,89,90,91,112,113,114,115,],[-49,-44,-47,-48,-51,-52,79,79,-48,-51,-52,-42,-43,-45,-46,-50,79,-48,-51,-52,]),'ELSE':([122,],[128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declara':([2,3,8,36,58,96,97,98,103,104,105,107,108,116,117,130,132,],[3,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'bloco':([3,36,96,97,98,107,108,130,],[8,58,103,104,105,116,117,132,]),'comando':([3,8,36,58,96,97,98,103,104,105,107,108,116,117,130,132,],[9,29,9,29,9,9,9,29,29,29,9,9,29,29,9,29,]),'cmd_leitura':([3,8,36,58,96,97,98,103,104,105,107,108,116,117,130,132,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'cmd_escrita':([3,8,36,58,96,97,98,103,104,105,107,108,116,117,130,132,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'cmd_if':([3,8,36,58,96,97,98,103,104,105,107,108,116,117,130,132,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'cmd_expr':([3,8,36,58,96,97,98,103,104,105,107,108,116,117,130,132,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'cmd_while':([3,8,36,58,96,97,98,103,104,105,107,108,116,117,130,132,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'cmd_break':([3,8,36,58,96,97,98,103,104,105,107,108,116,117,130,132,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'cmd_do_while':([3,8,36,58,96,97,98,103,104,105,107,108,116,117,130,132,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'lista_ids':([4,5,6,],[24,26,27,]),'expr':([31,33,34,48,70,80,106,118,],[43,53,54,67,94,95,112,124,]),'termo':([31,33,34,48,62,63,70,80,106,118,],[45,45,45,45,86,87,45,45,45,45,]),'fator':([31,33,34,48,62,63,65,66,70,80,106,118,],[46,46,46,46,46,46,89,90,46,46,46,46,]),'op_rel':([53,54,112,],[70,80,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAMA declara bloco FIMPROG','program',4,'p_program','parser.py',33),
  ('declara -> DECLARE_INT lista_ids DOT','declara',3,'p_declara','parser.py',42),
  ('declara -> DECLARE_FLOAT lista_ids DOT','declara',3,'p_declara','parser.py',43),
  ('declara -> DECLARE_TEXTO lista_ids DOT','declara',3,'p_declara','parser.py',44),
  ('lista_ids -> ID','lista_ids',1,'p_lista_ids','parser.py',72),
  ('lista_ids -> lista_ids COMMA ID','lista_ids',3,'p_lista_ids','parser.py',73),
  ('bloco -> comando','bloco',1,'p_bloco','parser.py',82),
  ('bloco -> bloco comando','bloco',2,'p_bloco','parser.py',83),
  ('comando -> cmd_leitura','comando',1,'p_comando','parser.py',92),
  ('comando -> cmd_escrita','comando',1,'p_comando','parser.py',93),
  ('comando -> cmd_if','comando',1,'p_comando','parser.py',94),
  ('comando -> cmd_expr','comando',1,'p_comando','parser.py',95),
  ('comando -> cmd_while','comando',1,'p_comando','parser.py',96),
  ('comando -> cmd_break','comando',1,'p_comando','parser.py',97),
  ('comando -> cmd_do_while','comando',1,'p_comando','parser.py',98),
  ('comando -> declara','comando',1,'p_comando','parser.py',99),
  ('cmd_leitura -> LEIA LPAREN ID RPAREN DOT','cmd_leitura',5,'p_cmd_leitura','parser.py',105),
  ('cmd_escrita -> ESCREVA LPAREN TEXT RPAREN DOT','cmd_escrita',5,'p_cmd_escrita','parser.py',115),
  ('cmd_escrita -> ESCREVA LPAREN ID RPAREN DOT','cmd_escrita',5,'p_cmd_escrita','parser.py',116),
  ('cmd_expr -> ID ASSIGN expr DOT','cmd_expr',4,'p_cmd_expr','parser.py',125),
  ('cmd_expr -> ID ASSIGN ASPAS ID ASPAS DOT','cmd_expr',6,'p_cmd_expr','parser.py',126),
  ('cmd_if -> IF LPAREN expr op_rel expr RPAREN LBRACE bloco RBRACE','cmd_if',9,'p_cmd_if','parser.py',138),
  ('cmd_if -> IF LPAREN expr op_rel expr RPAREN LBRACE bloco RBRACE ELSE LBRACE bloco RBRACE','cmd_if',13,'p_cmd_if','parser.py',139),
  ('cmd_while -> WHILE LPAREN expr op_rel expr RPAREN LBRACE bloco RBRACE','cmd_while',9,'p_cmd_while','parser.py',148),
  ('cmd_while -> WHILE LPAREN NUM RPAREN LBRACE bloco RBRACE','cmd_while',7,'p_cmd_while','parser.py',149),
  ('cmd_while -> WHILE LPAREN TRUE RPAREN LBRACE bloco RBRACE','cmd_while',7,'p_cmd_while','parser.py',150),
  ('cmd_while -> WHILE LPAREN FALSE RPAREN LBRACE bloco RBRACE','cmd_while',7,'p_cmd_while','parser.py',151),
  ('cmd_do_while -> DO LBRACE bloco RBRACE WHILE LPAREN expr op_rel expr RPAREN DOT','cmd_do_while',11,'p_cmd_do_while','parser.py',162),
  ('cmd_do_while -> DO LBRACE bloco RBRACE WHILE LPAREN NUM RPAREN DOT','cmd_do_while',9,'p_cmd_do_while','parser.py',163),
  ('cmd_do_while -> DO LBRACE bloco RBRACE WHILE LPAREN TRUE RPAREN DOT','cmd_do_while',9,'p_cmd_do_while','parser.py',164),
  ('cmd_do_while -> DO LBRACE bloco RBRACE WHILE LPAREN FALSE RPAREN DOT','cmd_do_while',9,'p_cmd_do_while','parser.py',165),
  ('cmd_break -> BREAK DOT','cmd_break',2,'p_cmd_break','parser.py',177),
  ('op_rel -> LT','op_rel',1,'p_op_rel','parser.py',183),
  ('op_rel -> GT','op_rel',1,'p_op_rel','parser.py',184),
  ('op_rel -> LE','op_rel',1,'p_op_rel','parser.py',185),
  ('op_rel -> GE','op_rel',1,'p_op_rel','parser.py',186),
  ('op_rel -> NE','op_rel',1,'p_op_rel','parser.py',187),
  ('op_rel -> EQ','op_rel',1,'p_op_rel','parser.py',188),
  ('op_rel -> AND','op_rel',1,'p_op_rel','parser.py',189),
  ('op_rel -> OR','op_rel',1,'p_op_rel','parser.py',190),
  ('op_rel -> NOT','op_rel',1,'p_op_rel','parser.py',191),
  ('expr -> expr PLUS termo','expr',3,'p_expr','parser.py',197),
  ('expr -> expr MINUS termo','expr',3,'p_expr','parser.py',198),
  ('expr -> termo','expr',1,'p_expr','parser.py',199),
  ('termo -> termo TIMES fator','termo',3,'p_termo','parser.py',208),
  ('termo -> termo DIVIDE fator','termo',3,'p_termo','parser.py',209),
  ('termo -> fator','termo',1,'p_termo','parser.py',210),
  ('fator -> NUM','fator',1,'p_fator','parser.py',219),
  ('fator -> ID','fator',1,'p_fator','parser.py',220),
  ('fator -> LPAREN expr RPAREN','fator',3,'p_fator','parser.py',221),
  ('fator -> TRUE','fator',1,'p_fator','parser.py',222),
  ('fator -> FALSE','fator',1,'p_fator','parser.py',223),
]
